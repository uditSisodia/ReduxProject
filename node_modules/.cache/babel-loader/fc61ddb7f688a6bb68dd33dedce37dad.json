{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0,\n    showCounter: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == \"increment\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type == \"decrement\") {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter\n    };\n\n    if (action.type == \"toggle\") {\n      return {\n        counter: state.counter,\n        showCounter: !state.counter\n      };\n    }\n  }\n\n  return state;\n};\n\nconst store = configureStore({\n  reducer: counterReducer\n});\nexport default store;","map":{"version":3,"sources":["/home/usl-sz-410/trainingMaterial/codes/reactjs/ReduxProject/01-starting-project/src/Store/index.js"],"names":["configureStore","counterReducer","state","counter","showCounter","action","type","amount","store","reducer"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,cAAc,GAAG,YAAuD;AAAA,MAAtDC,KAAsD,uEAA9C;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAE;AAA3B,GAA8C;AAAA,MAAXC,MAAW;;AAC5E,MAAIA,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC9B,WAAO;AACLH,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBE,MAAM,CAACE,MAD3B;AAELH,MAAAA,WAAW,EAAEF,KAAK,CAACE;AAFd,KAAP;AAID;;AACD,MAAIC,MAAM,CAACC,IAAP,IAAe,WAAnB,EAAgC;AAC9B,WAAO;AACLH,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBE,MAAM,CAACE,MAD3B;AAELH,MAAAA,WAAW,EAAEF,KAAK,CAACE;AAFd,KAAP;;AAKA,QAAIC,MAAM,CAACC,IAAP,IAAe,QAAnB,EAA6B;AAC3B,aAAO;AACLH,QAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELC,QAAAA,WAAW,EAAE,CAACF,KAAK,CAACC;AAFf,OAAP;AAID;AACF;;AAED,SAAOD,KAAP;AACD,CAtBD;;AAwBA,MAAMM,KAAK,GAAGR,cAAc,CAAC;AAC3BS,EAAAA,OAAO,EAAER;AADkB,CAAD,CAA5B;AAIA,eAAeO,KAAf","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\n\nconst counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n  if (action.type == \"increment\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type == \"decrement\") {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter,\n    };\n\n    if (action.type == \"toggle\") {\n      return {\n        counter: state.counter,\n        showCounter: !state.counter,\n      };\n    }\n  }\n\n  return state;\n};\n\nconst store = configureStore({\n  reducer: counterReducer,\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}